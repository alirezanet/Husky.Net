import{r as u,o as l,c as p,b as a,a as s,w as e,F as c,e as t,d as o}from"./app.b09da964.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const d={},r=a("h1",{id:"git-submodules",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#git-submodules","aria-hidden":"true"},"#"),t(" Git submodules")],-1),h=a("p",null,"Husky handles git submodules in two ways:",-1),k=a("li",null,"The project hooks and husky steps are completely ignored when the project is a git submodule.",-1),g=t("The hooks are installed in the submodule's git directory. This is the default mode following the step in "),m=t("Installation"),_=t(" and "),y=t("Attach Husky to your project"),b=t(" should get you up and running."),q=o(`<h2 id="installing-husky" tabindex="-1"><a class="header-anchor" href="#installing-husky" aria-hidden="true">#</a> Installing husky</h2><p>When running <code>dotnet husky install</code> Husky will alert you when it detects a submodule and tell you where it will attach the hooks:</p><div class="language-text ext-text"><pre class="language-text"><code>Submodule detected, attaching .../Repository/Project/mySubmodule/.husky hooks to .../Repository/Project/.git/modules/mySubmodule
</code></pre></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>The submodule hooks will only be executed when you&#39;re issuing git commands from inside the submodule folder.</p></div><h3 id="ignoring-submodule-install" tabindex="-1"><a class="header-anchor" href="#ignoring-submodule-install" aria-hidden="true">#</a> Ignoring submodule install</h3><p>For Husky to ignore installing when in a submodule, call <code>dotnet husky install --ignore-submodule</code>. This will make the install step a no-op. No git configurations will be applied and your hooks won&#39;t be attached.</p><p>A message will alert you when this is happening:</p><div class="language-text ext-text"><pre class="language-text"><code>Submodule detected and [--ignore-when-submodule] is set, skipping install target
</code></pre></div><h2 id="attaching-husky" tabindex="-1"><a class="header-anchor" href="#attaching-husky" aria-hidden="true">#</a> Attaching husky</h2>`,9),v=t("The "),f=a("code",null,"attach",-1),w=t(" command offers a "),x=a("code",null,"--ignore-submodule",-1),I=t(" options that generates an MsBuild target you can skip by setting the "),S=a("code",null,"IgnoreSubmodule",-1),T=t(" variable to "),j=a("code",null,"0",-1),C=t(" similar to the "),H=a("code",null,"Husky",-1),N=t(" variable, see "),R=t("Disable husky in CI/CD pipelines"),B=o(`<p>The generated block will look something like this, If you&#39;re attaching husky manually copy the target to your <code>.csproj</code> and adjust <code>WorkingDirectory</code> accordingly.</p><div class="language-xml ext-xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Target</span> <span class="token attr-name">Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>husky<span class="token punctuation">&quot;</span></span> <span class="token attr-name">BeforeTargets</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Restore;CollectPackageReferences<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Condition</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>$(HUSKY)<span class="token punctuation">&#39;</span> != 0  and <span class="token punctuation">&#39;</span>$(IgnoreSubmodule)<span class="token punctuation">&#39;</span> != 0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Exec</span> <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dotnet tool restore<span class="token punctuation">&quot;</span></span>  <span class="token attr-name">StandardOutputImportance</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Low<span class="token punctuation">&quot;</span></span> <span class="token attr-name">StandardErrorImportance</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>High<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Exec</span> <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dotnet husky install --ignore-submodule<span class="token punctuation">&quot;</span></span> <span class="token attr-name">StandardOutputImportance</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Low<span class="token punctuation">&quot;</span></span> <span class="token attr-name">StandardErrorImportance</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>High<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name">WorkingDirectory</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../../<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>  <span class="token comment">&lt;!--Update this to the relative path to your project root dir --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Target</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>If you want your submodule hooks ignored but still want the MsBuild target to run, remove the <code>and &#39;$(IgnoreSubmodule)&#39; != 0</code> condition. <code>dotnet husky install --ignore-submodule</code> is enough to prevent the installation of the hooks.</p></div>`,3);function E(A,D){const n=u("RouterLink");return l(),p(c,null,[r,h,a("ul",null,[k,a("li",null,[g,s(n,{to:"/guide/getting-started.md/#installation"},{default:e(()=>[m]),_:1}),_,s(n,{to:"/guide/automate.md/#attach-husky-to-your-project"},{default:e(()=>[y]),_:1}),b])]),q,a("p",null,[v,f,w,x,I,S,T,j,C,H,N,s(n,{to:"/guide/automate.html#disable-husky-in-ci-cd-pipelines"},{default:e(()=>[R]),_:1})]),B],64)}var V=i(d,[["render",E]]);export{V as default};
